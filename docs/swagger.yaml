openapi: 3.0.0
info:
  title: JobNinjas API Documentation
  version: 1.0.0
  description: API documentation for the JobNinjas backend application.

servers:
  - url: http://localhost:3000/api
    description: Development server

paths:
  /auth/register:
    post:
      summary: Register a new user
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  description: User's email address
                  example: user@example.com
                password:
                  type: string
                  format: password
                  description: User's password
                  example: password123
      responses:
        '201':
          description: User registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User was registered successfully!
        '400':
          description: Bad request (e.g., email already exists)
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Email already exists.
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Internal Server Error

  /auth/login:
    post:
      summary: Login a user
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  description: User's email address
                  example: user@example.com
                password:
                  type: string
                  format: password
                  description: User's password
                  example: password123
      responses:
        '200':
          description: User logged in successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    description: User ID
                  email:
                    type: string
                    format: email
                    description: User's email address
                  accessToken:
                    type: string
                    description: JWT access token
        '401':
          description: Unauthorized (invalid password)
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: null
                  message:
                    type: string
                    example: Invalid Password!
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User Not found.
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Internal Server Error

  /admin/register:
    post:
      summary: Register a new admin (consider protecting this route)
      tags:
        - Admin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  description: Admin's email address
                  example: admin@example.com
                password:
                  type: string
                  format: password
                  description: Admin's password
                  example: adminpassword123
      responses:
        '201':
          description: Admin registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Admin was registered successfully!
        '400':
          description: Bad request (e.g., email already exists)
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Email already exists.
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Internal Server Error

  /admin/login:
    post:
      summary: Login an admin (initiates OTP)
      tags:
        - Admin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  description: Admin's email address
                  example: admin@example.com
                password:
                  type: string
                  format: password
                  description: Admin's password
                  example: adminpassword123
      responses:
        '200':
          description: OTP sent to admin's email
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: OTP sent to your email.
        '401':
          description: Unauthorized (invalid password)
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: null
                  message:
                    type: string
                    example: Invalid Password!
        '404':
          description: Admin not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Admin Not found.
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Internal Server Error

  /admin/verify-otp:
    post:
      summary: Verify admin OTP and get JWT
      tags:
        - Admin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  description: Admin's email address
                  example: admin@example.com
                otp:
                  type: string
                  description: OTP received by email
                  example: "123456"
      responses:
        '200':
          description: OTP verified successfully, JWT returned
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    description: Admin ID
                  email:
                    type: string
                    format: email
                    description: Admin's email address
                  accessToken:
                    type: string
                    description: JWT access token for admin
        '400':
          description: Invalid or expired OTP
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Invalid or expired OTP.
        '404':
          description: Admin not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Admin Not found.
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Internal Server Error

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

